plugins {
    id 'java-library'
    id 'maven-publish'
    id 'com.github.davidmc24.gradle.plugin.avro' version '1.1.0'
    id 'signing'
}

group 'org.jlab'
version '1.0.0'

ext.releaseDate = 'April 12 2021'
ext.confluentVer = '6.0.1'
ext.kafkaVer = '2.6.0'

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    withJavadocJar()
    withSourcesJar()
}

tasks.withType(JavaCompile) {
    options.compilerArgs += ["-Xlint:unchecked"]
}

repositories {
    mavenCentral()

    maven {
        url "https://packages.confluent.io/maven"
    }
}

dependencies {
    implementation "org.apache.kafka:kafka-streams:" + kafkaVer,
            "io.confluent:kafka-streams-avro-serde:" + confluentVer,
            "org.apache.avro:avro:1.10.1",
            "org.slf4j:slf4j-log4j12:1.7.30"
    testImplementation "junit:junit:4.13.1"
}

test {
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}

jar {
    archiveFileName = 'jaws-libj.jar'
}

processResources {
    filesMatching('release.properties') {
        filter {
            String line -> line.replaceAll("@VERSION@", version)
        }
        filter {
            String line -> line.replaceAll("@RELEASE_DATE@", releaseDate)
        }
    }
}

javadoc {
    options.overview = "src/main/java/overview.html"
    options.source = 11
    options.with {
        links 'https://docs.oracle.com/en/java/javase/11/docs/api'
    }
}

signing {
    sign publishing.publications
}


publishing {
    repositories {
        maven {
            name "OSSRH"
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = project.findProperty("ossrh.user") ?: System.getenv("OSSRH_USER")
                password = project.findProperty("ossrh.token") ?: System.getenv("OSSRH_TOKEN")
            }
        }
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/JeffersonLab/jaws-libj")
            credentials {
                username = project.findProperty("github.user") ?: System.getenv("GITHUB_USER")
                password = project.findProperty("github.token") ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        maven(MavenPublication) {
            from(components.java)
            pom {
                name = project.name
                description = project.description
                url = "https://github.com/JeffersonLab/jaws-libj"
                licenses {
                    license {
                        name = "The MIT License"
                        url = "https://github.com/JeffersonLab/jaws-libj/blob/master/LICENSE"
                    }
                }
                developers {
                    developer {
                        id = "slominskir"
                        name = "Ryan Slominski"
                        email = "ryans@jlab.org"
                    }
                }
                scm {
                    url = "https://github.com/JeffersonLab/jaws-libj.git"
                }
            }
        }
    }
    artifacts {
        archives javadocJar, sourcesJar
    }
}